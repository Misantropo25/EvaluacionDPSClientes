//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EvaluacionDPS.ServiceReference1 {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.WebService1Soap")]
    public interface WebService1Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/listarEmpleados", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet listarEmpleados();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/listarEmpleados", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> listarEmpleadosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarEmpleado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] AgregarEmpleado(
                    string LastName, 
                    string FirstName, 
                    string Title, 
                    string TitleOfCourtesy, 
                    string BirthDate, 
                    string HireDate, 
                    string Address, 
                    string City, 
                    string Region, 
                    string PostalCode, 
                    string Country, 
                    string HomePhone, 
                    string Extension, 
                    string Photo, 
                    string Notes, 
                    int ReportsTo, 
                    string PhotoPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarEmpleado", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> AgregarEmpleadoAsync(
                    string LastName, 
                    string FirstName, 
                    string Title, 
                    string TitleOfCourtesy, 
                    string BirthDate, 
                    string HireDate, 
                    string Address, 
                    string City, 
                    string Region, 
                    string PostalCode, 
                    string Country, 
                    string HomePhone, 
                    string Extension, 
                    string Photo, 
                    string Notes, 
                    int ReportsTo, 
                    string PhotoPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarEmpleado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscarEmpleado(string texto, string criterio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarEmpleado", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarEmpleadoAsync(string texto, string criterio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarEmpleado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] ActualizarEmpleado(
                    int EmployeeID, 
                    string LastName, 
                    string FirstName, 
                    string Title, 
                    string TitleOfCourtesy, 
                    string BirthDate, 
                    string HireDate, 
                    string Address, 
                    string City, 
                    string Region, 
                    string PostalCode, 
                    string Country, 
                    string HomePhone, 
                    string Extension, 
                    string Photo, 
                    string Notes, 
                    int ReportsTo, 
                    string PhotoPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarEmpleado", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> ActualizarEmpleadoAsync(
                    int EmployeeID, 
                    string LastName, 
                    string FirstName, 
                    string Title, 
                    string TitleOfCourtesy, 
                    string BirthDate, 
                    string HireDate, 
                    string Address, 
                    string City, 
                    string Region, 
                    string PostalCode, 
                    string Country, 
                    string HomePhone, 
                    string Extension, 
                    string Photo, 
                    string Notes, 
                    int ReportsTo, 
                    string PhotoPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarEmpleado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] EliminarEmpleado(string CustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarEmpleado", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> EliminarEmpleadoAsync(string CustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/listarClientes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet listarClientes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/listarClientes", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> listarClientesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarCliente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] AgregarCliente(string CustomerID, string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarCliente", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> AgregarClienteAsync(string CustomerID, string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarCliente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscarCliente(string texto, string criterio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarCliente", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarClienteAsync(string texto, string criterio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarCliente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] ActualizarCliente(string CustomerID, string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarCliente", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> ActualizarClienteAsync(string CustomerID, string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarCliente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] EliminarCliente(string CustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarCliente", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> EliminarClienteAsync(string CustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/listarProveedores", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet listarProveedores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/listarProveedores", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> listarProveedoresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarProveedor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] AgregarProveedor(string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax, string HomePage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarProveedor", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> AgregarProveedorAsync(string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax, string HomePage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarProveedor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscarProveedor(string texto, string criterio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarProveedor", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarProveedorAsync(string texto, string criterio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarProveedor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] ActualizarProveedor(string SupplierID, string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax, string HomePage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarProveedor", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> ActualizarProveedorAsync(string SupplierID, string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax, string HomePage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarProveedor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] EliminarProveedor(string SupplierID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarProveedor", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> EliminarProveedorAsync(string SupplierID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebService1SoapChannel : EvaluacionDPS.ServiceReference1.WebService1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebService1SoapClient : System.ServiceModel.ClientBase<EvaluacionDPS.ServiceReference1.WebService1Soap>, EvaluacionDPS.ServiceReference1.WebService1Soap {
        
        public WebService1SoapClient() {
        }
        
        public WebService1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet listarEmpleados() {
            return base.Channel.listarEmpleados();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> listarEmpleadosAsync() {
            return base.Channel.listarEmpleadosAsync();
        }
        
        public string[] AgregarEmpleado(
                    string LastName, 
                    string FirstName, 
                    string Title, 
                    string TitleOfCourtesy, 
                    string BirthDate, 
                    string HireDate, 
                    string Address, 
                    string City, 
                    string Region, 
                    string PostalCode, 
                    string Country, 
                    string HomePhone, 
                    string Extension, 
                    string Photo, 
                    string Notes, 
                    int ReportsTo, 
                    string PhotoPath) {
            return base.Channel.AgregarEmpleado(LastName, FirstName, Title, TitleOfCourtesy, BirthDate, HireDate, Address, City, Region, PostalCode, Country, HomePhone, Extension, Photo, Notes, ReportsTo, PhotoPath);
        }
        
        public System.Threading.Tasks.Task<string[]> AgregarEmpleadoAsync(
                    string LastName, 
                    string FirstName, 
                    string Title, 
                    string TitleOfCourtesy, 
                    string BirthDate, 
                    string HireDate, 
                    string Address, 
                    string City, 
                    string Region, 
                    string PostalCode, 
                    string Country, 
                    string HomePhone, 
                    string Extension, 
                    string Photo, 
                    string Notes, 
                    int ReportsTo, 
                    string PhotoPath) {
            return base.Channel.AgregarEmpleadoAsync(LastName, FirstName, Title, TitleOfCourtesy, BirthDate, HireDate, Address, City, Region, PostalCode, Country, HomePhone, Extension, Photo, Notes, ReportsTo, PhotoPath);
        }
        
        public System.Data.DataSet BuscarEmpleado(string texto, string criterio) {
            return base.Channel.BuscarEmpleado(texto, criterio);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarEmpleadoAsync(string texto, string criterio) {
            return base.Channel.BuscarEmpleadoAsync(texto, criterio);
        }
        
        public string[] ActualizarEmpleado(
                    int EmployeeID, 
                    string LastName, 
                    string FirstName, 
                    string Title, 
                    string TitleOfCourtesy, 
                    string BirthDate, 
                    string HireDate, 
                    string Address, 
                    string City, 
                    string Region, 
                    string PostalCode, 
                    string Country, 
                    string HomePhone, 
                    string Extension, 
                    string Photo, 
                    string Notes, 
                    int ReportsTo, 
                    string PhotoPath) {
            return base.Channel.ActualizarEmpleado(EmployeeID, LastName, FirstName, Title, TitleOfCourtesy, BirthDate, HireDate, Address, City, Region, PostalCode, Country, HomePhone, Extension, Photo, Notes, ReportsTo, PhotoPath);
        }
        
        public System.Threading.Tasks.Task<string[]> ActualizarEmpleadoAsync(
                    int EmployeeID, 
                    string LastName, 
                    string FirstName, 
                    string Title, 
                    string TitleOfCourtesy, 
                    string BirthDate, 
                    string HireDate, 
                    string Address, 
                    string City, 
                    string Region, 
                    string PostalCode, 
                    string Country, 
                    string HomePhone, 
                    string Extension, 
                    string Photo, 
                    string Notes, 
                    int ReportsTo, 
                    string PhotoPath) {
            return base.Channel.ActualizarEmpleadoAsync(EmployeeID, LastName, FirstName, Title, TitleOfCourtesy, BirthDate, HireDate, Address, City, Region, PostalCode, Country, HomePhone, Extension, Photo, Notes, ReportsTo, PhotoPath);
        }
        
        public string[] EliminarEmpleado(string CustomerID) {
            return base.Channel.EliminarEmpleado(CustomerID);
        }
        
        public System.Threading.Tasks.Task<string[]> EliminarEmpleadoAsync(string CustomerID) {
            return base.Channel.EliminarEmpleadoAsync(CustomerID);
        }
        
        public System.Data.DataSet listarClientes() {
            return base.Channel.listarClientes();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> listarClientesAsync() {
            return base.Channel.listarClientesAsync();
        }
        
        public string[] AgregarCliente(string CustomerID, string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax) {
            return base.Channel.AgregarCliente(CustomerID, CompanyName, ContactName, ContactTitle, Address, City, Region, PostalCode, Country, Phone, Fax);
        }
        
        public System.Threading.Tasks.Task<string[]> AgregarClienteAsync(string CustomerID, string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax) {
            return base.Channel.AgregarClienteAsync(CustomerID, CompanyName, ContactName, ContactTitle, Address, City, Region, PostalCode, Country, Phone, Fax);
        }
        
        public System.Data.DataSet BuscarCliente(string texto, string criterio) {
            return base.Channel.BuscarCliente(texto, criterio);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarClienteAsync(string texto, string criterio) {
            return base.Channel.BuscarClienteAsync(texto, criterio);
        }
        
        public string[] ActualizarCliente(string CustomerID, string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax) {
            return base.Channel.ActualizarCliente(CustomerID, CompanyName, ContactName, ContactTitle, Address, City, Region, PostalCode, Country, Phone, Fax);
        }
        
        public System.Threading.Tasks.Task<string[]> ActualizarClienteAsync(string CustomerID, string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax) {
            return base.Channel.ActualizarClienteAsync(CustomerID, CompanyName, ContactName, ContactTitle, Address, City, Region, PostalCode, Country, Phone, Fax);
        }
        
        public string[] EliminarCliente(string CustomerID) {
            return base.Channel.EliminarCliente(CustomerID);
        }
        
        public System.Threading.Tasks.Task<string[]> EliminarClienteAsync(string CustomerID) {
            return base.Channel.EliminarClienteAsync(CustomerID);
        }
        
        public System.Data.DataSet listarProveedores() {
            return base.Channel.listarProveedores();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> listarProveedoresAsync() {
            return base.Channel.listarProveedoresAsync();
        }
        
        public string[] AgregarProveedor(string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax, string HomePage) {
            return base.Channel.AgregarProveedor(CompanyName, ContactName, ContactTitle, Address, City, Region, PostalCode, Country, Phone, Fax, HomePage);
        }
        
        public System.Threading.Tasks.Task<string[]> AgregarProveedorAsync(string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax, string HomePage) {
            return base.Channel.AgregarProveedorAsync(CompanyName, ContactName, ContactTitle, Address, City, Region, PostalCode, Country, Phone, Fax, HomePage);
        }
        
        public System.Data.DataSet BuscarProveedor(string texto, string criterio) {
            return base.Channel.BuscarProveedor(texto, criterio);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarProveedorAsync(string texto, string criterio) {
            return base.Channel.BuscarProveedorAsync(texto, criterio);
        }
        
        public string[] ActualizarProveedor(string SupplierID, string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax, string HomePage) {
            return base.Channel.ActualizarProveedor(SupplierID, CompanyName, ContactName, ContactTitle, Address, City, Region, PostalCode, Country, Phone, Fax, HomePage);
        }
        
        public System.Threading.Tasks.Task<string[]> ActualizarProveedorAsync(string SupplierID, string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax, string HomePage) {
            return base.Channel.ActualizarProveedorAsync(SupplierID, CompanyName, ContactName, ContactTitle, Address, City, Region, PostalCode, Country, Phone, Fax, HomePage);
        }
        
        public string[] EliminarProveedor(string SupplierID) {
            return base.Channel.EliminarProveedor(SupplierID);
        }
        
        public System.Threading.Tasks.Task<string[]> EliminarProveedorAsync(string SupplierID) {
            return base.Channel.EliminarProveedorAsync(SupplierID);
        }
    }
}
